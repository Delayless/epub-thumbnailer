#!/usr/bin/python

#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Author: Mariano Simone (marianosimone@gmail.com)
# Version: 1.0
# Name: epub-thumbnailer
# Description: An implementation of a cover thumbnailer for epub files
# Installation: see README

import zipfile
import sys
import Image
import shutil
import os
from itertools import product # Python >= 2.6 required

# Which file are we working with?
input_file = sys.argv[1]
# Where do does the file have to be saved?
output_file = sys.argv[2]
# Required size?
size = sys.argv[3]

# An epub is just a zip
epub = zipfile.ZipFile(input_file, "r")

# Just some examples of what I found inside my epubs...
possible_dirs = ["", "OPS/images/", "OPS/", "OEBPS/images/"]
possible_filenames = ["cover", "cover_fmt", "front_cover"]
possible_extensions = ["jpg", "png"]

combined_paths = product(possible_dirs, possible_filenames, possible_extensions)
possible_paths = map(lambda tup : "%s%s.%s" % (tup[0], tup[1], tup[2]), combined_paths)

for path in possible_paths:
  try:
    epub.extract(path, "/tmp")
    im = Image.open(os.path.join("/tmp", path))
    im.thumbnail((size, size), Image.ANTIALIAS)
    im.save(output_file, "PNG")
    if "/" in path: # cover was inside a dir
        shutil.rmtree(os.path.join("/tmp", path.split("/")[0]))
    else: # or just in the epub's root
        os.remove(os.path.join("/tmp",path))
    exit(0)
  except Exception as ex:
    print "Couldn't make thumbnail using: ", path, ex

exit(1)
